name: Python application CI

on:
  push:
    branches:
      - main  # Specify the branch if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Firebase credentials file
      # This step writes the content of FIREBASE_CRED_PATH secret into a file
      run: echo "${{ secrets.FIREBASE_CRED_PATH }}" > $GITHUB_WORKSPACE/firebase-service-account.json
      shell: bash

    - name: Export environment variables
      run: |
        echo "FIREBASE_CRED_PATH=$GITHUB_WORKSPACE/firebase-service-account.json" >> $GITHUB_ENV
        echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> $GITHUB_ENV
        echo "FIREBASE_USER_COLLECTION=${{ secrets.FIREBASE_USER_COLLECTION }}" >> $GITHUB_ENV
        echo "FIREBASE_STRATEGY_COLLECTION=${{ secrets.FIREBASE_STRATEGY_COLLECTION }}" >> $GITHUB_ENV
        echo "discord_bot_token=${{ secrets.discord_bot_token }}" >> $GITHUB_ENV
      shell: bash

    - name: Verify Firebase credentials
      run: |
        if [ -f "$FIREBASE_CRED_PATH" ]; then
          echo "Firebase credentials file found at $FIREBASE_CRED_PATH"
        else
          echo "Firebase credentials file not found."
          exit 1
        fi
      shell: bash

    - name: Check formatting with black
      run: |
        pip install black
        black .
        
    - name: Test with pytest
      env:
        FIREBASE_CRED_PATH: ${{ env.FIREBASE_CRED_PATH }}
        FIREBASE_DATABASE_URL: ${{ env.FIREBASE_DATABASE_URL }}
        discord_bot_token: ${{ env.discord_bot_token }}
      run: |
        pip install pytest
        pytest
